function writeln()
{
	!var p10 10
	sub(-1,p10)
}
function writesp()
{
	!var charSpace 32
	sub(-1,charSpace)
}

function read(a)
{
	!var temp 0

    clear(temp)
    clear(a)
    sub(temp, -1)
    sub(a, temp)
}

function writeTimes(s,n)
{
	!var writeTimest 0
	clear(writeTimest)
	sub(writeTimest,n)
	inc(writeTimest)

	loop:
		write(s)
	incJump(writeTimest,loop)
}

function write(a)
{
	sub(-1,a)
}
function writeln(a)
{
	write(a)
	writeln()
}
function writesp(a)
{
	write(a)
	writesp()
}

//	Old function. Bad because can onle ever print 1 exact string
//  s is not a variable. It is a pointer to the start of a string
function writeStrMacro(s)
{
	!var zero 0
	!var n1 -1

	//Save string pointer to write it again later
	jump(skipConsts)
		startPtr:s,
	skipConsts:

	//Main loop
	loop:
		subleq(s,zero,end)
		write(s)
		sub(loop+1,n1)
		sub(loop+3,n1)
	jump(loop)

	end:
	//Reset the pointers
	set(loop+1, startPtr)
	set(loop+3, startPtr)
}

function getStrLen(s,out)
{
	//!getStrLenTemp
	//set(getStrLenTemp,s)
	//dec(getStrLenTemp)
	
	!var n1 -1
	geti(s,n1,out)
}

function writeStr(s)
{
	set(writeStr+5, cb)
	set(writeStr+6, s)

	jump(writeStr)
	cb: comeback,
	comeback:
}

function writelnStr(s)
{
	writeStr(s)
	writeln()
}
function writespStr(s)
{
	writeStr(s)
	writesp()
}

function _writeStr()
{
	jump(skipConsts)
		ret: jump(0),
		startPtr: 0,
	skipConsts:

	!var zero 0
	!var n1 -1

	//Reset the pointers
	set(loop+1, startPtr)
	set(loop+3, startPtr)

	//Main loop
	loop:
		subleq(0,zero,ret)
		write(0)
		sub(loop+1,n1)
		sub(loop+3,n1)
	jump(loop)

}


//Reads chars from console
//First char can be -
//Others have to be 0-9
//When encountering a char that is not 0-9 finish the number collection
//Than means that whatever char is after the number is discarded
function readInt(a)
{
	jump(skipLocals),
		i:0,
		tempint: 0,
		tempint2: 0,
		isNeg: 0,
		intSum: 0,
	skipLocals:
	
	clear(intSum)

	!var p1 1
	!var p9 9
	!var charMinus 45
	!var char0 48
	!var char9 57

	read(tempint)
	
	jneq(tempint,charMinus,notNeg)
		set(isNeg,p1)
		read(tempint)
		jump(negEnd)
	notNeg:
		clear(isNeg)
	negEnd:

	loop:
	jlt(tempint,char0,end)
	jgt(tempint,char9,end)
	sub(tempint,char0)

	clear(i)
	sub(i,p9)
	clear(tempint2)
	mulLoop:
		sub(tempint2,intSum)
	incJump(i,mulLoop)

	sub(tempint2,tempint)

	clear(intSum)
	sub(intSum,tempint2)
	read(tempint)
	jump(loop)

	end:
	
	subleq(isNeg,zero,asd)
	neg(intSum)
	asd:

	set(a,intSum)
}


function writeInt(a)
{
	set(writeInt+5, cb)
	set(writeInt+6, a)

	jump(writeInt)
	cb: comeback,
	comeback:
}
function writelnInt(a)
{
	writeInt(a)
	writeln()
}
function writespInt(a)
{
	writeInt(a)
	writesp()
}

function _writeInt()
{
	jump(skipLocals),
		ret: jump(0),
		num: 0,
		count: 0,
	skipLocals:
	
	!var char0 48
	!var charMinus 45
 
	ifeq0(num,else1)
		write(char0)
		jump(ret)
	else1:

	iflt0(num,else2)
		write(charMinus)
		neg(num)
	else2:

	!var p1 1
	!var p10 10
	!var p100 100
	!var p1000 1000
	!var p10000 10000
	!var p100000 100000
	!var p1000000 1000000
	!var p10000000 10000000
	!var p100000000 100000000
	!var p1000000000 1000000000
 
	jgte(num,p1000000000, d10)
	jgte(num,p100000000, d9)
	jgte(num,p10000000, d8)
	jgte(num,p1000000, d7)
	jgte(num,p100000, d6)
	jgte(num,p10000, d5)
	jgte(num,p1000, d4)
	jgte(num,p100, d3)
	jgte(num,p10, d2)
	jump(d1)

	d10:
	__writeInt(p1000000000)
	d9:
	__writeInt(p100000000)
	d8:
	__writeInt(p10000000)
	d7:
	__writeInt(p1000000)
	d6:
	__writeInt(p100000)
	d5:
	__writeInt(p10000)
	d4:
	__writeInt(p1000)
	d3:
	__writeInt(p100)
	d2:
	__writeInt(p10)
	d1:
	__writeInt(p1)

 
	jump(ret)
}

function __writeInt(pp){
	set(count,char0)
	loop:
		jlt(num,pp,endLoop)
		inc(count)
		sub(num,pp)
		jump(loop)
	endLoop:
	write(count)
}