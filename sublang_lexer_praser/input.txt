!include "libs/includes.txt"


function newArray(len,out){
	set(newArray+5, cb)
	set(newArray+6, len)

	jump(newArray)
	cb: comeback,
	comeback:
	set(out,_return1)
}

function _newArray()
{
	jump(skipVars)
		ret: jump(0),
		len: 0,
		loc: 0,
	skipVars:

	malloc(len,loc)
	clearArea(loc,len)
	set(_return1,loc)

	jump(ret)
}



function arrayGet(arr,index,out){
	set(arrayGet+5, cb)
	set(arrayGet+6, arr)
	set(arrayGet+7, index)

	jump(arrayGet)
	cb: comeback,
	comeback:
	set(out,_return1)
}

function _arrayGet()
{
	jump(skipVars)
		ret: jump(0),
		arr: 0,
		index: 0,
		ptr: 0,
		val: 0,
	skipVars:

	add(arr,index,ptr)
	memGet(ptr,val)
	set(_return1,val)

	jump(ret)
}


function arraySet(arr,index,val){
	set(arraySet+5, cb)
	set(arraySet+6, arr)
	set(arraySet+7, index)
	set(arraySet+8, val)


	jump(arraySet)
	cb: comeback,
	comeback:

}

function _arraySet()
{
	jump(skipVars)
		ret: jump(0),
		arr: 0,
		index: 0,
		val: 0,
		ptr: 0,
	skipVars:

	add(arr,index,ptr)
	memSet(ptr,val)

	jump(ret)
}

 
 
//Sleep for ms
function sleep(sec)
{
	jump(skipVars)
		t: sec,
		t2: t,
		timer: 0,
		delay: -30000,
	skipVars:

	memGet(t,t2)
	
	loop:
		dec(t2)
		set(timer,delay)
		loop2:
		incJump(timer,loop2)

	jgt0(t2,loop)

}

function main()
{
	jump(skipFuncs)
		writeInt:  _writeInt(),
		writeStr:  _writeStr(),
		mul:       _mul(),
		div:       _div(),
		geti:      _geti(),
		seti:      _seti(),
		memGet:    _memGet(),
		memSet:    _memSet(),
		rngNext:   _rngNext(),
		rngNext2:  _rngNext2(),
		copyArea:  _copyArea(),
		clearArea: _clearArea(),
		readLine:  _readLine(),
		malloc:    _malloc(),
		free:      _free(),
		newArray:  _newArray(),
		arrayGet:  _arrayGet(),
		arraySet:  _arraySet(),
	skipFuncs:
	
	!var arr 0
	!var p10 10
	!var p0 0
	!var p1 1
	!var p2 2
	!var p3 3
	!var p4 4
	!var p5 5
	!var p1000 1000

	!var a 32
	!var s 0

	mul(#25,#-2,a)

	writelnInt(a)
 
	//loop:	
	//	writelnStr(debugStr)
	//	sleep(#32)
		//read(s)
		//write(s)


	//jump(loop)



	read(temp)
	jump(-1)
	
	!vars_location
	
	debugStr: _debugStr,
	_debugStr: !stringz "debug",

	!include "libs/input_buffer.txt"
	!include "libs/heap_vars.txt"
 
	_stack: _mainStack,
	_mainStack: 0,
	!zeroes 250
} 
